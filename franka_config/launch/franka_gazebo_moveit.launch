<launch>

  <!-- specify the planning pipeline -->
  <arg name="pipeline" default="ompl" />

  <!--防止控制器超过时间-->
  <!-- Gazebo specific options -->
  <arg name="gazebo_gui" default="true"/>
  <arg name="use_rviz" default="true" />
  <arg name="paused" default="false"/>
  <arg name="initial_joint_positions" doc="Initial joint configuration of the robot"
       default=" -J panda_joint1 0 -J panda_joint2 0 -J panda_joint3 0 -J panda_joint4 0 -J panda_joint5 0 -J panda_joint6 1.3155 -J panda_joint7 0"/>
  <arg name="moveit_controller_manager" default="ros_control"/>
  <arg name="fake_execution_type" default="interpolate" />
  <arg name="debug" default="false" />
  <arg name="load_robot_description" default="true"/>
  

  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" default="worlds/empty.world"/>
    <arg name="paused" value="true"/>
    <arg name="gui" value="$(arg gazebo_gui)"/>
  </include>

  <!-- send robot urdf to param server -->
  <arg name="effort_interface" default="false" />
	<arg name="position_interface" default="true" />
	<param name="robot_description" command="$(find xacro)/xacro --inorder $(find franka_description_rf)/robots/panda_arm_hand.urdf.xacro effort_interface:=$(arg effort_interface) position_interface:=$(arg position_interface)"/>

  <!-- unpause only after loading robot model -->
  <arg name="unpause" value="$(eval '' if arg('paused') else '-unpause')" />
  <!-- push robot_description to factory and spawn robot in gazebo at the origin, change x,y,z arguments to spawn in a different position -->
  <arg name="world_pose" value="-x 0 -y 0 -z 0" />
  <node name="spawn_gazebo_model" pkg="gazebo_ros" type="spawn_model" args="-urdf -param robot_description -model robot $(arg unpause) $(arg world_pose) $(arg initial_joint_positions)"
    respawn="false" output="screen" />
  
  <!-- Load joint controller parameters for Gazebo -->
  <rosparam file="$(find franka_config)/config/gazebo_controllers.yaml" />
  <!-- Spawn Gazebo ROS controllers -->
  <node name="gazebo_controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen" args="joint_state_controller" />
  
  <!-- Load joint controller configurations from YAML file to parameter server -->
  <rosparam file="$(find franka_config)/config/ros_controllers.yaml" command="load"/>

  <!-- Load the controllers -->
  <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false"
    output="screen" args="panda_arm_group_controller panda_gripper_controller "/>

  <rosparam command="load" file="$(find franka_gazebo_moveit)/config/default.yaml"/>

  <!-- Given the published joint states, publish tf for the robot links -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="true" output="screen" />
 


  <include file="$(dirname)/move_group.launch">
    <arg name="allow_trajectory_execution" value="true"/>
    <arg name="moveit_controller_manager" value="$(arg moveit_controller_manager)" />
    <arg name="fake_execution_type" value="$(arg fake_execution_type)"/>
    <arg name="info" value="true"/>
    <arg name="debug" value="$(arg debug)"/>
    <arg name="pipeline" value="$(arg pipeline)"/>
    <arg name="load_robot_description" value="$(arg load_robot_description)"/>
  </include>

 
  <!-- <include file="$(dirname)/moveit_rviz.launch" if="$(arg use_rviz)">
    <arg name="rviz_config" value="$(dirname)/moveit.rviz"/>
    <arg name="debug" value="$(arg debug)"/>
  </include> -->

</launch>
